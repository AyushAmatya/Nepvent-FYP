[{"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\nav.js":"4","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\home.js":"5","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\profile.js":"6","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\menu.js":"7","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\createEvent.js":"8","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\Register.jsx":"9","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\helpers\\auth.js":"10","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\Activate.jsx":"11","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\Login.jsx":"12","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\ForgotPassword.jsx":"13","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\ResetPassword.jsx":"14","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\CreateEvent.jsx":"15","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\MyEvents.jsx":"16","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\EventDetails.jsx":"17"},{"size":500,"mtime":1617187052535,"results":"18","hashOfConfig":"19"},{"size":1682,"mtime":1617888539520,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":6716,"mtime":1617983339460,"results":"22","hashOfConfig":"19"},{"size":2637,"mtime":1617994222315,"results":"23","hashOfConfig":"19"},{"size":3293,"mtime":1617678416252,"results":"24","hashOfConfig":"19"},{"size":3267,"mtime":1617678711246,"results":"25","hashOfConfig":"19"},{"size":6132,"mtime":1615109868335,"results":"26","hashOfConfig":"19"},{"size":6484,"mtime":1617678433193,"results":"27","hashOfConfig":"19"},{"size":2182,"mtime":1617652896113,"results":"28","hashOfConfig":"19"},{"size":3374,"mtime":1617678320230,"results":"29","hashOfConfig":"19"},{"size":5220,"mtime":1617678359000,"results":"30","hashOfConfig":"19"},{"size":2508,"mtime":1617678335658,"results":"31","hashOfConfig":"19"},{"size":3116,"mtime":1617678449461,"results":"32","hashOfConfig":"19"},{"size":48461,"mtime":1618030814726,"results":"33","hashOfConfig":"19"},{"size":6178,"mtime":1617986501820,"results":"34","hashOfConfig":"19"},{"size":26020,"mtime":1617981295395,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"18yhgb2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\index.js",[],["81","82"],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\App.js",["83","84"],"import './App.css';\nimport Nav from './Components/nav.js';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './Components/home.js';\nimport Login from './Components/Login.jsx';\nimport CreateEvent from './Components/CreateEvent.jsx';\nimport Register from './Components/Register.jsx';\nimport Activate from './Components/Activate.jsx';\nimport Forget from './Components/ForgotPassword.jsx';\nimport Reset from './Components/ResetPassword.jsx';\nimport MyEvents from './Components/MyEvents.jsx';\nimport EventDetails from './Components/EventDetails.jsx';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nfunction App() {\n  return (\n    <div>\n      <ToastContainer/>\n      <Router>\n        \n        <Switch>\n          \n          <Route path = \"/register\" exact render = {props =><Register {...props}/>}/>\n          <Route path = \"/users/password/forget\" exact render = {props =><Forget {...props}/>}/>\n          <Route path = \"/users/activate/:token\" exact render = {props =><Activate {...props}/>}/>\n          <Route path = \"/users/password/reset/:token\" exact render = {props =><Reset {...props}/>}/>\n          <Route path = \"/login\" exact render = {props =><Login {...props}/>}/>\n          <Route path = \"/createEvent\" exact render = {props =><CreateEvent {...props}/>}/>\n          <Route path = \"/myEvents\" exact render = {props =><MyEvents {...props}/>}/>\n          <Route path = \"/myEventDetails/:event_id?\" exact render = {props =><EventDetails {...props}/>}/>\n          <Route path = \"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\nav.js",["85"],"import React from 'react';\r\nimport './navStyle.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PropTypes from \"prop-types\";\r\nimport MyMenu from './menu.js'\r\nimport MyProfile from './profile.js'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport LogoWhite from '../img/logoWhite.jpg';\r\nimport {AppBar, Toolbar, Typography, TextField, Select, MenuItem, InputLabel, FormControl} from '@material-ui/core';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n\r\n      '& label.Mui-focused': {\r\n        color: 'white',\r\n      },\r\n      '& .MuiInput-underline:before': {\r\n        borderBottomColor: '#aee5e8',\r\n      },\r\n      '& .MuiInput-underline':{\r\n        '&:hover:not($disabled):before': {\r\n          borderBottomColor: 'white',\r\n        }\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#aee5e8',\r\n      },\r\n      '& underline.Mui-focused': {\r\n        borderBottomColor: '#aee5e8',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'red',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'yellow',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'green',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\n  const styles = {\r\n    root: {\r\n      background: \"#003542\"\r\n    },\r\n    input: {\r\n      color: \"white\",\r\n    }\r\n  };\r\nclass nav extends React.Component{\r\n    \r\n    componentDidMount() {\r\n      document.querySelector(\".navbar\").className = \"navbar\";\r\n      window.addEventListener(\"scroll\", this.handleScroll);\r\n      // console.log(this.props.userName);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n  \r\n    handleScroll = () => {\r\n      if (window.scrollY > 40) {\r\n        document.querySelector(\".navbar\").className = \"navbar activeNav\";\r\n        document.querySelector(\".mainHeader\").className = \"mainHeader invisible\";\r\n        document.querySelector(\".companySubTitle\").className = \"companySubTitle\";\r\n        document.querySelector(\".topBlankSpace\").className = \"topBlankSpace\";\r\n        document.querySelector(\".bottomBlankSpace\").className = \"bottomBlankSpace\";\r\n        document.querySelector(\".navbarItems\").className = \"navbarItems marginCorrection\";\r\n      } else {\r\n        document.querySelector(\".navbar\").className = \"navbar\";\r\n        document.querySelector(\".mainHeader\").className = \"mainHeader\";\r\n        document.querySelector(\".companySubTitle\").className = \"companySubTitle invisible\";\r\n        document.querySelector(\".topBlankSpace\").className = \"topBlankSpace invisible\";\r\n        document.querySelector(\".bottomBlankSpace\").className = \"bottomBlankSpace invisible\";\r\n        document.querySelector(\".navbarItems\").className = \"navbarItems\";\r\n      }\r\n    };\r\n    render(){\r\n        const { classes } =this.props;\r\n        \r\n        return(\r\n            <div>\r\n            <div className=\"mainHeader\">\r\n                <img src={LogoBlack} alt=\"logo\" className=\"logo1\"/>\r\n\r\n                <div className='title'>\r\n                    <h1 style={{fontFamily:\"Comic Sans MS\", color:\"black\"}}><Link to='/' style={{textDecoration:'none', color:'black'}}>Nepvent</Link></h1>\r\n                    <h4 style={{fontFamily:\"MV Boli\", fontWeight:\"normal\", marginTop:\"-20px\", color:\"black\"}}><Link to='/' style={{textDecoration:'none', color:'black'}}>Event Publishing and Ticket Booking</Link></h4>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className =\"topBlankSpace invisible\" style={{zIndex:'999'}}></div>\r\n            <AppBar className=\"navbar\" style={{zIndex:'999'}}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" >\r\n                    <div className=\"companySubTitle invisible\">\r\n                      \r\n                      <h4 style={{fontFamily:\"Comic Sans MS\", color:\"whitesmoke\", marginLeft:\"82%\", marginTop:\"5%\"}}><u><Link to='/' style={{textDecoration:'none', color:'whitesmoke'}}>Nepvent</Link></u></h4>\r\n                      <img src={LogoWhite} alt=\"logo\" className=\"smallLogo\"/>\r\n                    </div>\r\n                    \r\n                    </Typography>\r\n                    <div className=\"navbarItems\">\r\n                      <div className='searchBox'>\r\n                        <SearchIcon \r\n                          style={{\r\n                            fontSize:\"40px\",\r\n                            color:'whitesmoke'\r\n                          }}\r\n                        />\r\n                        <CssTextField \r\n                          className={classes.margin} \r\n                          id=\"custom-css-standard-input\" \r\n                          placeholder=\"Search Events ...\" \r\n                          size=\"small\"\r\n                          InputProps={{className: classes.input}}\r\n                          style={{ width:'400px', marginLeft:'5px', marginTop:'7px'}}\r\n                        />                      \r\n                      </div>\r\n                      <FormControl variant=\"outlined\" className={classes.formControl} size='small' style={{width:'200px', marginTop:'-3px',marginLeft:'25px'}}>\r\n                        \r\n                        <InputLabel id=\"demo-simple-select-outlined-label\" style={{color:'#5c7e86', backgroundColor:'#003542', marginTop:'7px'}}>\r\n                        <FilterListIcon style={{display:'inline-block', verticalAlign:'middle', marginTop:'-5px'}}/>  FilterBy ...\r\n                        </InputLabel>\r\n                        <Select id=\"custom-css-outlined-input\" label=\"Age\" style={{color:'white', marginTop:'4px'}}>\r\n                        <MenuItem style={{borderBottom: '1px Solid', fontWeight:'bold', backgroundColor:'whitesmoke'}}>Filter By:</MenuItem>\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value='free'>Free</MenuItem>\r\n                          <MenuItem value='paid'>Paid</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                      <MyProfile userName={this.props.userName}/>\r\n                      <MyMenu userName={this.props.userName}/>\r\n                    </div>        \r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className =\"bottomBlankSpace invisible\" style={{zIndex:'999'}}></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nnav.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\nexport default withStyles(styles)(nav);","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\home.js",["86","87","88","89","90"],"import React, { Component, useEffect } from 'react';\r\nimport './myStyle.css';\r\nimport {Grid, Card, CardActionArea, CardContent} from '@material-ui/core';\r\nimport Nav from './nav.js';\r\nimport { isAuth } from '../helpers/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Home = () => {\r\n    const [userId, setUserId] = React.useState();\r\n    const [allOtherEvents, setAllOtherEvents] = React.useState();\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('user')){\r\n            const user_id = JSON.parse(localStorage.getItem('user'))['_id']\r\n            setUserId(user_id);\r\n            axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getAllOtherEvents`, {user_id:user_id})\r\n        .then(res => {\r\n            const allOtherEvents = res.data;\r\n            setAllOtherEvents(allOtherEvents);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        }else{\r\n            const user_id='';\r\n            axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getAllOtherEvents`, {user_id:user_id})\r\n        .then(res => {\r\n            const allOtherEvents = res.data;\r\n            setAllOtherEvents(allOtherEvents);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        }\r\n        \r\n    },[]);\r\n\r\n    const renderAllOtherEvents=(allOtherEvents)=>{\r\n        return allOtherEvents && allOtherEvents.map((events,i)=>{\r\n            return(\r\n                <Grid item xs={12} key={i} md={4} style={{marginTop:'20px'}}>\r\n                    <Link to={'/myEventDetails/'+events.event_id} style={{textDecoration:'none'}}>\r\n                        <Card className='items' style={{backgroundColor:'silver'}}>\r\n                            <CardActionArea>\r\n                                <CardContent>\r\n                                    <h2 className='item-name'>{events.event_name}</h2>\r\n                                    <div className='item-price'>{events.from_date.slice(0,10)} - {events.to_date.slice(0,10)}</div>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Link>\r\n                </Grid>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Nav/>\r\n            \r\n            <div className=\"container\">\r\n                <Grid container spacing={2}>\r\n                    {renderAllOtherEvents(allOtherEvents)}\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\profile.js",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\menu.js",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\createEvent.js",["91","92","93","94"],"import React, { Component } from 'react';\r\nimport './loginStyle.css';\r\nimport {Grid, TextField, Button} from '@material-ui/core';\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport Nav from './nav.js';\r\nexport default class CreateEvent extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.onChangeUserName = this.onChangeUserName.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if(response.data.length > 0){\r\n                    \r\n                    this.setState({\r\n                        alreadyRegisteredUsername: response.data.map(user=> user.userName)\r\n                    });\r\n                    \r\n                }\r\n            });\r\n    }\r\n\r\n    onChangeUserName(e){\r\n        this.setState({\r\n            userName: e.target.value\r\n        });\r\n    }\r\n    onChangePassword(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        \r\n        event.preventDefault();\r\n        // console.log(this.state.alreadyRegisteredUsername);\r\n        \r\n        if (this.state.alreadyRegisteredUsername.includes(this.state.userName)){\r\n            // console.log(\"yes\");\r\n            axios.get('http://localhost:5000/users/getPassword/' + this.state.userName)\r\n                .then(response => {\r\n                    if(response.data.length > 0){\r\n                        this.setState({\r\n                            originalPass: response.data.map(user=> user.password)\r\n                        });\r\n                    }\r\n                });\r\n            if(this.state.password == this.state.originalPass){\r\n                window.location = '/'+ this.state.userName;\r\n            }else{\r\n                alert('Incorrect email or password!!!');\r\n            }\r\n        }else{\r\n            alert('Incorrect email or password!!!');\r\n        }\r\n      }\r\n    \r\n    state={\r\n        alreadyRegisteredUsername:'',\r\n        userName: '',\r\n        password: '',\r\n        originalPass:''\r\n    }\r\n\r\n    handleCancleBtn(e){\r\n        window.location = '/';\r\n        \r\n    }\r\n    \r\n    render(){\r\n        const {profileImg} = this.state\r\n        return (\r\n            <div>\r\n                <Nav userName=\"lo\"/>\r\n                <div className=\"container2\">\r\n                    <h1>Create event page</h1>\r\n                    <form onSubmit={this.handleSubmit} style={{width:\"100%\"}}>     \r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"Event Name\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"Location\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"Category\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"From Date\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"To Date\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"Targeted Audience\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <input type=\"file\" multiple />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {/* <div style={{marginTop:'30px'}}>\r\n                            <TextField required label=\"User Name\" value={this.state.userName} onChange={this.onChangeUserName} style={{ width:\"35%\"}}/>\r\n                        </div>\r\n                        <div style={{marginTop:'30px'}}>\r\n                            <TextField required label=\"Password\" value={this.state.password} onChange={this.onChangePassword} style={{ width:\"35%\"}}/>\r\n                        </div> */}\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{marginTop:'20px'}}> Submit </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" type=\"button\" style = {{marginTop:'20px', marginLeft:'20px'}} onClick={this.handleCancleBtn}> Cancle </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["95","96"],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\Register.jsx",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\helpers\\auth.js",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\Activate.jsx",["97","98","99","100","101","102"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken';\r\nimport { authenticate, isAuth } from '../helpers/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport '../App.css';\r\nimport './registerStyle.css';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nfunction handleCancle(){\r\n    window.location='/';\r\n}\r\nfunction handleRegister(){\r\n    window.location='/register';\r\n}\r\nconst Activate = ({ match }) => {\r\n  const [formData, setFormData] = useState({\r\n    first_name: '',\r\n    middle_name: '',\r\n    last_name: '',\r\n    token: '',\r\n    show: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    /**get token from params like /active/token\r\n     * then decode the token to get name\r\n     */\r\n    let token = match.params.token;\r\n    let { first_name, middle_name, last_name } = jwt.decode(token);\r\n\r\n    if (token) {\r\n      setFormData({ ...formData, first_name, middle_name, last_name, token });\r\n    }\r\n\r\n    console.log(token, first_name, middle_name, last_name);\r\n  }, [match.params]);\r\n  const { first_name, middle_name, last_name, token, show } = formData;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/activation`, {\r\n        token\r\n      })\r\n      .then(res => {\r\n        setFormData({\r\n          ...formData,\r\n          show: false\r\n        });\r\n\r\n        toast.success(res.data.message);\r\n      })\r\n      .catch(err => {\r\n        \r\n        toast.error(err.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='min-h-screen bg-gray-100 text-gray-900 flex justify-center'>\r\n        {isAuth() ? <Redirect to='/' /> : null}\r\n        <div className=\"formContainer\">\r\n            <div style={{display:\"flex\", textAlign:\"left\"}}>\r\n                <img src={LogoBlack} alt=\"logo\" className=\"formLogo\"/>\r\n                <div className='title'>\r\n                    <h1 style={{fontFamily:\"Comic Sans MS\", fontSize:\"70px\", marginTop:\"20px\"}}>Nepvent</h1>\r\n                    <h4 style={{fontFamily:\"MV Boli\", fontWeight:\"normal\", marginTop:\"-35px\", fontSize:\"30px\"}}>Event Publishing and Ticket Booking</h4>\r\n                </div>\r\n            </div>\r\n            <h1 style={{color:'goldenrod', fontFamily:\"Comic Sans MS\", fontSize:\"30px\"}}>\r\n              Welcome {first_name + ' ' + middle_name + ' ' +last_name}\r\n            </h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{marginTop:'40px', marginLeft:'45px', width:'25%'}}> Activate your Account </Button>\r\n              <div style={{marginTop:'25px', backgroundColor:'whitesmoke', width:'41%', padding:'10px', marginLeft:'30%'}}>\r\n                Or Register Again\r\n              </div>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"button\" style = {{marginTop:'40px',  marginLeft:'40px', width:'10%'}} onClick={handleRegister}> Register </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"button\" style = {{marginTop:'40px', marginLeft:'20px', width:'10%'}} onClick={handleCancle}> Cancle </Button>\r\n            </form>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Activate;","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\Login.jsx",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\ForgotPassword.jsx",[],"C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\ResetPassword.jsx",["103"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport '../App.css';\r\nimport './registerStyle.css';\r\nimport {TextField, Button} from '@material-ui/core';\r\nconst ResetPassword = ({match}) => {\r\n  const [formData, setFormData] = useState({\r\n      password1: '',\r\n      password2: '',\r\n      token: '',\r\n  });\r\n    const { password1, password2, token } = formData;\r\n    \r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        if(token) {\r\n            setFormData({...formData, token,})\r\n        }\r\n        \r\n    }, [])\r\n  const handleChange = text => e => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n    const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if ((password1 === password2) && password1 && password2) {\r\n      setFormData({ ...formData, textChange: 'Submitting' });\r\n      axios\r\n        .put(`${process.env.REACT_APP_API_URL}/resetpassword`, {\r\n            newPassword: password1,\r\n            resetPasswordLink: token\r\n        })\r\n        .then(res => {\r\n          console.log(res.data.message)\r\n            setFormData({\r\n              ...formData,\r\n               password1: '',\r\n              password2: ''\r\n            });\r\n\r\n            toast.success(res.data.message);\r\n        })\r\n        .catch(err => {\r\n          toast.error(err.response.data.error);\r\n          toast.error(err.response.data.errors);\r\n          \r\n        });\r\n    } else {\r\n      toast.error('Passwords don\\'t matches');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"formContainer\">\r\n            <div style={{display:\"flex\", textAlign:\"left\"}}>\r\n                <img src={LogoBlack} alt=\"logo\" className=\"formLogo\"/>\r\n                <div className='title'>\r\n                    <h1 style={{fontFamily:\"Comic Sans MS\", fontSize:\"70px\", marginTop:\"20px\"}}>Nepvent</h1>\r\n                    <h4 style={{fontFamily:\"MV Boli\", fontWeight:\"normal\", marginTop:\"-35px\", fontSize:\"30px\"}}>Event Publishing and Ticket Booking</h4>\r\n                </div>\r\n            </div>\r\n            <h1 style={{color:'goldenrod', fontFamily:\"Comic Sans MS\", fontSize:\"30px\", marginLeft:'30px'}}>\r\n              Reset Your Password\r\n            </h1>\r\n            <form onSubmit={handleSubmit}>                        \r\n                <div style={{marginTop:'30px'}}>\r\n                    <TextField required label=\"Password\" type='password' value={password1} onChange={handleChange('password1')} style={{marginLeft:\"55px\", width:\"35%\"}}/>\r\n                </div>\r\n                <div style={{marginTop:'30px'}}>\r\n                    <TextField required label=\"Confirm Password\" type='password' value={password2} onChange={handleChange('password2')} style={{marginLeft:\"55px\", width:\"35%\"}}/>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{marginTop:'40px', marginLeft:'45px', width:'25%'}}> Submit </Button>  \r\n            </form>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\CreateEvent.jsx",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { authenticate, isAuth, getCookie } from '../helpers/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport '../App.css';\r\nimport './registerStyle.css';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {TextField, Button, Grid, TextareaAutosize } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Nav from './nav.js';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n// import AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\n// import LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\n// import TimePicker from '@material-ui/lab/TimePicker';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst type = [{ title: 'Seminars', category: 'Corporate events' },\r\n  { title: 'Conferences', category: 'Corporate events' },\r\n  { title: 'Trade shows', category: 'Corporate events' },   \r\n  { title: 'Workshops', category: 'Corporate events' },\r\n  { title: 'Other', category: 'Corporate events' },     \r\n  { title: 'Reunions', category: 'Social events' }, \r\n  { title: 'Themed parties', category: 'Social events' },   \r\n  { title: 'Other', category: 'Social events' }, \r\n  { title: 'Webinars', category: 'Virtual events' },   \r\n  { title: 'Classes', category: 'Virtual events' },     \r\n  { title: 'Interactive performances', category: 'Virtual events' }, \r\n  { title: 'Summits', category: 'Virtual events' },  \r\n  { title: 'Other', category: 'Virtual events' },  \r\n  { title: 'Auctions', category: 'Fundraising events' },   \r\n  { title: 'Sponsored sporting events', category: 'Fundraising events' },     \r\n  { title: 'Sales', category: 'Fundraising events' }, \r\n  { title: 'Gala dinners', category: 'Fundraising events' },   \r\n  { title: 'Other', category: 'Fundraising events' },\r\n  { title: 'Music festivals', category: 'Festivals' }, \r\n  { title: 'Food festivals', category: 'Festivals' },  \r\n  { title: 'Other', category: 'Festivals' }, \r\n  { title: 'Street parties', category: 'Community events' },   \r\n  { title: 'Swap shops', category: 'Community events' }, \r\n  { title: 'Litter-picking', category: 'Community events' },  \r\n  { title: 'Other', category: 'Community events' },  \r\n  { title: 'Boutique shops', category: 'Pop-up events' },   \r\n  { title: 'Food collaborations', category: 'Pop-up events' }, \r\n  { title: 'Exercise classes', category: 'Pop-up events' },\r\n  { title: 'Other', category: 'Pop-up events' }                    \r\n];\r\n\r\nfunction handleCancle(){\r\n    window.location='/';\r\n}\r\nfunction handleRegister(){\r\n    window.location='/register';\r\n}\r\nconst optionForEventType = ['Online', 'On Site'];\r\n\r\nconst optionForTicketType = ['Paid', 'Free'];\r\n\r\nconst CreateEvent = ({ match }) => {\r\n\r\n  const [allFiles, setAllFiles] = useState([]);\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState({\r\n    first_name: '',\r\n    middle_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    event_name: ''\r\n  });\r\n  \r\n  const [eventCoordination, setEventCoordination] = useState({\r\n    event_manager_name : '',\r\n    manager_department : '',\r\n    event_id:'',\r\n    manager_telephone_number : '',\r\n    manager_mobile_number : '',\r\n    manager_email : ''\r\n  });\r\n  const [eventPurpose, setEventPurpose] = useState({\r\n     objectives:'',\r\n     event_id:'',\r\n     details:'',\r\n     guest_category:'',\r\n     vip_name:'',\r\n     host:'',\r\n     executives:'',\r\n     executives_role:'',\r\n     executives_date_time:'',\r\n     speech_points:'',\r\n     other_speakers:'',\r\n     media:'',\r\n     av:'',\r\n     catering:''\r\n  });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [toDate, setToDate] = React.useState(new Date());\r\n  const [noOfDays, setNoOfDays] = useState((toDate.setHours(0, 0, 0, 0)  - selectedDate.setHours(0, 0, 0, 0))/86400000 +1);\r\n  const [toTime, setToTime] = useState('19:00');\r\n  const [fromTime, setFromTime] = useState('07:00');\r\n  const [eventTypeOptions, setEventTypeOptions] = useState(optionForEventType[1]);\r\n  const [ticketTypeOptions, setTicketTypeOptions] = useState(optionForTicketType[0]);\r\n  let from_date_temp = JSON.stringify(new Date(Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), selectedDate.getHours(), selectedDate.getMinutes())));\r\n  from_date_temp = from_date_temp.slice(1,11);\r\n  let to_date_temp = JSON.stringify(new Date(Date.UTC(toDate.getFullYear(), toDate.getMonth(), toDate.getDate(), toDate.getHours(), toDate.getMinutes())));\r\n  to_date_temp = to_date_temp.slice(1,11);\r\n  const [eventDetailsData, setEventDetailsData] = useState({\r\n    user_id:'',\r\n    event_id:'',\r\n    event_name:'',\r\n    ticket_price:'',\r\n    from_date:from_date_temp,\r\n    from_time:toTime,\r\n    to_date:to_date_temp,\r\n    to_time:fromTime,\r\n    event_category:'',\r\n    event_category_title:'',\r\n    other_category_description:'',\r\n    event_type:eventTypeOptions,\r\n    proposed_venue: '',\r\n    ticket_type:'',\r\n    ticket_limit:'',\r\n    link:'',\r\n    no_of_days:noOfDays,\r\n    number_of_expected_guest: ''\r\n  });\r\n  const [noOfExpectedGuests, setNoOfExpectedGuests] = useState();\r\n  const [ticketLimit, setTicketLimit] = useState();\r\n  const [value, setValue] = useState();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [otherCategory, setOtherCategory] = useState(false);\r\n  const [typeOnline, setTypeOnline] = useState(false);\r\n  const [ticketPaid, setTicketPaid] = useState(true);\r\n  const [selectedFiles, setSelectedFiles ] = useState([]);\r\n  \r\n  const [eventType, setEventType] = React.useState('');\r\n  const [ticketype, setticketType] = useState('');\r\n\r\n  const handleDateChange = (date) => {\r\n    if(date.setHours(0, 0, 0, 0) > toDate.setHours(0, 0, 0, 0)){\r\n        toast.error('From-date cant be greater than To-date');\r\n    }else{\r\n        setSelectedDate(date);\r\n        setNoOfDays((toDate.setHours(0, 0, 0, 0)  - date.setHours(0, 0, 0, 0))/86400000 +1);\r\n        setToTime('--:--');\r\n        setFromTime('--:--');\r\n        const no_of_days = (toDate.setHours(0, 0, 0, 0)  - date.setHours(0, 0, 0, 0))/86400000 +1;\r\n        let from_date = JSON.stringify(new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes())));\r\n        from_date = from_date.slice(1,11);\r\n        setEventDetailsData({ ...eventDetailsData, from_date, no_of_days});\r\n    }\r\n    \r\n  };\r\n  const handleCategoryChange = (event, newValue) => {\r\n    if(newValue != null){\r\n    setValue(newValue);\r\n    const other_category_description = '';\r\n    const event_category = newValue.category;\r\n    const event_category_title = newValue.title;\r\n    setEventDetailsData({ ...eventDetailsData, other_category_description, event_category, event_category_title});\r\n        if(newValue.title == 'Other'){\r\n            setOtherCategory(true);\r\n        }else{\r\n            setOtherCategory(false);\r\n        }\r\n    }else{\r\n        setOtherCategory(false);\r\n    }\r\n  }\r\n  const handleTicketTypeChange = (event, newValue) => {\r\n    setTicketTypeOptions(newValue);\r\n    const ticket_type = newValue;\r\n    setEventDetailsData({ ...eventDetailsData, ticket_type});\r\n    if(newValue != null){\r\n        if(newValue == 'Paid'){\r\n            setTicketPaid(true);\r\n        }else{\r\n            setTicketPaid(false);\r\n        }\r\n    }else{\r\n        setTicketPaid(false);\r\n    }\r\n  }\r\n  const handleTypeChange = (event, newValue) => {\r\n    setEventTypeOptions(newValue);\r\n    const event_type = newValue;\r\n    setEventDetailsData({ ...eventDetailsData, event_type});\r\n    if(newValue != null){\r\n        if(newValue == 'Online'){\r\n            setTypeOnline(true);\r\n        }else{\r\n            setTypeOnline(false);\r\n        }\r\n    }else{\r\n        setTypeOnline(false);\r\n    }\r\n  }\r\n  const handleToDateChange = (date) => {\r\n    if(date.setHours(0, 0, 0, 0) < selectedDate.setHours(0, 0, 0, 0)){\r\n        toast.error('To-date cant be less than from-Date');\r\n    }else{\r\n        setToDate(date);\r\n        setNoOfDays((date.setHours(0, 0, 0, 0)  - selectedDate.setHours(0, 0, 0, 0))/86400000 +1);\r\n        setToTime('--:--');\r\n        setFromTime('--:--');\r\n        const no_of_days = (date.setHours(0, 0, 0, 0)  - selectedDate.setHours(0, 0, 0, 0))/86400000 +1;\r\n        let to_date = JSON.stringify(new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes())));\r\n        to_date = to_date.slice(1,11);\r\n        setEventDetailsData({ ...eventDetailsData, to_date, no_of_days});\r\n    }    \r\n  }\r\n  const handleToTimeChange = (e) => {\r\n    if(selectedDate.setHours(0, 0, 0, 0) == toDate.setHours(0, 0, 0, 0)){\r\n        if(e.target.value.split(\":\")[0]<fromTime.split(\":\")[0]){\r\n            toast.error('To-time cant be less than from-time on same day');\r\n        }else if(e.target.value.split(\":\")[0] == fromTime.split(\":\")[0]){\r\n            if(e.target.value.split(\":\")[1]<fromTime.split(\":\")[1]){\r\n                toast.error('To-time cant be less than from-time on same day');\r\n            }else{\r\n                setToTime(e.target.value);\r\n                const to_time = e.target.value;\r\n                setEventDetailsData({ ...eventDetailsData, to_time});\r\n            }\r\n        }else{\r\n            setToTime(e.target.value);\r\n            const to_time = e.target.value;\r\n            setEventDetailsData({ ...eventDetailsData, to_time});\r\n        }\r\n    }else{\r\n        setToTime(e.target.value);\r\n        const to_time = e.target.value;\r\n        setEventDetailsData({ ...eventDetailsData, to_time});\r\n    }    \r\n  }\r\n  const handleFromTimeChange = (e) => {\r\n    if(selectedDate.setHours(0, 0, 0, 0) == toDate.setHours(0, 0, 0, 0)){\r\n        if(e.target.value.split(\":\")[0]>toTime.split(\":\")[0]){\r\n            toast.error('From-time cant be more than To-time on same day');\r\n        }else if(e.target.value.split(\":\")[0] == toTime.split(\":\")[0]){\r\n            if(e.target.value.split(\":\")[1]>toTime.split(\":\")[1]){\r\n                toast.error('From-time cant be more than To-time on same day');\r\n            }else{\r\n                setFromTime(e.target.value);\r\n                const from_time = e.target.value;\r\n                setEventDetailsData({ ...eventDetailsData, from_time});\r\n            }\r\n        }else{\r\n            setFromTime(e.target.value);\r\n            const from_time = e.target.value;\r\n            setEventDetailsData({ ...eventDetailsData, from_time});\r\n        }\r\n    }else{\r\n        setFromTime(e.target.value);\r\n        const from_time = e.target.value;\r\n        setEventDetailsData({ ...eventDetailsData, from_time});\r\n    }    \r\n  }\r\n//   'Corporate events', 'Social events', 'Virtual events', 'Fundraising events', 'Festivals', 'Community events', 'Pop-up events'\r\n  const optionsEventCategories = type.map((option) => {\r\n    const category = option.category;\r\n    return {\r\n      category: category,\r\n      ...option,\r\n    };\r\n  });\r\n \r\n  useEffect(() => {\r\n    /**get token from params like /active/token\r\n     * then decode the token to get name\r\n     */\r\n    const user_id = JSON.parse(localStorage.getItem('user'))['_id'];\r\n\r\n    const email = JSON.parse(localStorage.getItem('user'))['email'];\r\n    let { first_name, middle_name, last_name } = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (email) {\r\n      setFormData({ ...formData, first_name, middle_name, last_name, email });\r\n    }\r\n    if(user_id){\r\n        axios\r\n        .get(`${process.env.REACT_APP_EVENT_API_URL}/getMaxId`)\r\n        .then(res => {\r\n            if(res.data.length != 0){\r\n                console.log(res.data)\r\n                const event_id = Number(res.data[0].event_id) + 1;\r\n                console.log(event_id);\r\n                setEventDetailsData({...eventDetailsData, event_id, user_id});\r\n                setEventCoordination({...eventCoordination, event_id});\r\n                setEventPurpose({...eventPurpose, event_id});\r\n            }else{\r\n                const event_id = 1;\r\n                setEventDetailsData({...eventDetailsData, event_id, user_id});\r\n                setEventCoordination({...eventCoordination, event_id});\r\n                setEventPurpose({...eventPurpose, event_id});\r\n            }\r\n        })\r\n        .catch(err => {\r\n        console.log(err.response);\r\n        });\r\n    }\r\n    \r\n  }, [match.params]);\r\n  const { first_name, middle_name, last_name } = formData;\r\n  const {other_category_description, link, proposed_venue, ticket_price} = eventDetailsData;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    for (var i=0; i < allFiles.length; i++) {\r\n        console.log('pragya');\r\n        const fd = new FormData();\r\n        fd.append('image', allFiles[i], allFiles[i].name)\r\n        axios.post(`${process.env.REACT_APP_EVENT_API_URL}/uploadImage`,fd)\r\n        .then(res => {\r\n            const file_name_temp = res.data.eventImage.file_name;\r\n            axios.post(`${process.env.REACT_APP_EVENT_API_URL}/linkImageAndEvent`,{\r\n                file_name: file_name_temp,\r\n                event_id:eventDetailsData.event_id\r\n            }).then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n        \r\n    }\r\n    // window.location.reload();\r\n    // const fd = new FormData();\r\n    // fd.append('image', selectedFiles,selectedFiles);\r\n    \r\n    console.log(eventDetailsData);\r\n    console.log('lol');\r\n    console.log(eventCoordination);\r\n    console.log('hehe');\r\n    console.log(eventPurpose);\r\n    console.log('wtf');\r\n    console.log(selectedDate, toDate, eventType, noOfDays, toTime, fromTime, value, inputValue, otherCategory, selectedFiles, formData);\r\n    axios\r\n          .post(`${process.env.REACT_APP_EVENT_API_URL}/add`, {\r\n            eventDetailsData: eventDetailsData,\r\n            eventPurpose: eventPurpose,\r\n            eventCoordination: eventCoordination\r\n          }        \r\n          )\r\n          .then(res => {\r\n            toast.success(res.data.message);\r\n            history.push('/myEvents');\r\n          })\r\n          .catch(err => {\r\n            console.log(err.response);\r\n            toast.error(err.response.data.errors);\r\n          });\r\n    \r\n  };\r\n  const handleImageChange = (e) => {\r\n    // console.log(e.target.files[])\r\n    let allFilesTemp = allFiles;\r\n\r\n    \r\n    for (var i=0; i < e.target.files.length; i++) {\r\n        allFilesTemp.push(e.target.files[i]);\r\n    }\r\n    setAllFiles(allFilesTemp);\r\n    if (e.target.files) {\r\n        const filesArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file));\r\n\r\n        console.log(allFiles);\r\n        console.log(\"filesArray: \", filesArray);\r\n        console.log(e.target.files);\r\n        setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n        Array.from(e.target.files).map(\r\n            (file) => URL.revokeObjectURL(file) // avoid memory leak\r\n        );\r\n    }\r\n    \r\n  };\r\n\r\n  const renderPhotos = (source) => {\r\n    return source.map((photo) => {\r\n        return <img src={photo} alt=\"\" key={photo} style={{width:'334px',height:'190px',objectFit:'cover',padding:'0.75rem'}} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='min-h-screen bg-gray-100 text-gray-900 flex justify-center'>\r\n        \r\n        <Nav/>\r\n                <div className=\"container2\">\r\n                    <h1 style={{color:'#003542', fontFamily:\"Comic Sans MS\", fontSize:\"30px\"}}>Create Your Event</h1>\r\n                    <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", borderBottom:'2px Solid', width:\"140px\"}}>Event Details</h1>\r\n                    <form style={{width:\"100%\"}} onSubmit={handleSubmit}>     \r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                        required label=\"Event Name\"  \r\n                                        // value={event_name} \r\n                                        style={{ width:\"100%\"}}\r\n                                        onChange={(event) => {\r\n                                            const event_name=event.target.value;\r\n                                            setEventDetailsData({ ...eventDetailsData, event_name });\r\n                                        }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}> \r\n                                <div style={{marginTop:'15px'}}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker\r\n                                            style={{width:'100%'}}\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-dialog\"\r\n                                            label=\"From Date\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            value={selectedDate}\r\n                                            onChange={handleDateChange}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField\r\n                                        id=\"time\"\r\n                                        label=\"From Time\"\r\n                                        style={{width:'100%'}}\r\n                                        type=\"time\"\r\n                                        required\r\n                                        value={fromTime}\r\n                                        onChange={handleFromTimeChange}\r\n                                        InputLabelProps={{\r\n                                        shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                        step: 300, // 5 min\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                             \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}> \r\n                                <div style={{marginTop:'15px'}}>\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker\r\n                                            style={{width:'100%'}}\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-dialog\"\r\n                                            label=\"To Date\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            value={toDate}\r\n                                            onChange={handleToDateChange}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                    \r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField\r\n                                        id=\"time\"\r\n                                        label=\"To Time\"\r\n                                        required\r\n                                        style={{width:'100%'}}\r\n                                        type=\"time\"\r\n                                        value={toTime}\r\n                                        onChange={handleToTimeChange}\r\n                                        InputLabelProps={{\r\n                                        shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                        step: 300, // 5 min\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                             \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                <Autocomplete\r\n                                    style={{width:'100%'}}\r\n                                    value={value}\r\n                                    onChange={handleCategoryChange}\r\n                                    inputValue={inputValue}\r\n                                    onInputChange={(event, newInputValue) => {\r\n                                    setInputValue(newInputValue);\r\n                                    }}\r\n                                    id=\"controllable-states-demo\"\r\n                                    options={optionsEventCategories.sort((a, b) => -b.category.localeCompare(a.category))}\r\n                                    groupBy={(option) => option.category}\r\n                                    getOptionLabel={(option) => option.title}\r\n                                    style={{ width: '100%' }}\r\n                                    renderInput={(params) => <TextField {...params} required label=\"Event Categories\" variant=\"outlined\" />}\r\n                                />    \r\n                                </div>             \r\n                            </Grid>\r\n                            {otherCategory?<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Other Category Description\"\r\n                                    value={other_category_description} \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const other_category_description=event.target.value;\r\n                                        setEventDetailsData({ ...eventDetailsData, other_category_description });\r\n                                    }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>:null}\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <Autocomplete\r\n                                        \r\n                                        value={eventTypeOptions}\r\n                                        onChange={handleTypeChange}\r\n                                        inputValue={eventType}\r\n                                        onInputChange={(event, newInputValue) => {\r\n                                        setEventType(newInputValue);\r\n                                        }}\r\n                                        options={optionForEventType}\r\n                                        style={{ width: '100%' }}\r\n                                        renderInput={(params) => <TextField {...params} required label=\"Event Type\" variant=\"outlined\" />}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            {typeOnline?<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    value={link}\r\n                                    label=\"Link\" \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const link=event.target.value;\r\n                                        const proposed_venue = '';\r\n                                        setEventDetailsData({ ...eventDetailsData, link, proposed_venue });\r\n                                    }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>:<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    value={proposed_venue}\r\n                                    label=\"Proposed Venue\" \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const proposed_venue=event.target.value;\r\n                                        const link = '';\r\n                                        setEventDetailsData({ ...eventDetailsData, proposed_venue, link });\r\n                                    }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>}\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField required label=\"No. of Days\" value={noOfDays} disabled style={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    value={noOfExpectedGuests}\r\n                                    label=\"Number of expected guests\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        console.log(Number(event.target.value));\r\n                                        if(isNaN(Number(event.target.value))){\r\n                                            toast.error(\"Number of expected guests must be integer value\"); \r\n                                            setNoOfExpectedGuests('');\r\n                                        }else{\r\n                                            const number_of_expected_guest=Number(event.target.value);\r\n                                            setEventDetailsData({ ...eventDetailsData, number_of_expected_guest });\r\n                                            setNoOfExpectedGuests(event.target.value);\r\n                                        }\r\n                                        \r\n                                    }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <Autocomplete\r\n                                        value={ticketTypeOptions}\r\n                                        onChange={handleTicketTypeChange}\r\n                                        inputValue={ticketype}\r\n                                        onInputChange={(event, newInputValue) => {\r\n                                        setticketType(newInputValue);\r\n                                        }}\r\n                                        options={optionForTicketType}\r\n                                        style={{ width: '100%' }}\r\n                                        renderInput={(params) => <TextField {...params} required label=\"Ticket Type\" variant=\"outlined\" />}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            {ticketPaid?<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Ticket Price (RS)\"\r\n                                    value={ticket_price} \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        if(isNaN(Number(event.target.value))){\r\n                                            toast.error(\"Ticket Price must be integer value\"); \r\n                                            const ticket_price='';\r\n                                            setEventDetailsData({ ...eventDetailsData, ticket_price })\r\n                                        }else{\r\n                                            const ticket_price=event.target.value;\r\n                                            setEventDetailsData({ ...eventDetailsData, ticket_price });\r\n                                        }\r\n                                    }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>:null}\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    value={ticketLimit}\r\n                                    label=\"Ticket Limit\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        if(isNaN(Number(event.target.value))){\r\n                                            toast.error(\"Ticket Limit must be integer value\"); \r\n                                            setTicketLimit('');\r\n                                        }else{\r\n                                            const ticket_limit=Number(event.target.value);\r\n                                            setEventDetailsData({ ...eventDetailsData, ticket_limit });\r\n                                            setTicketLimit(event.target.value);\r\n                                        }\r\n                                        \r\n                                    }}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={12}>\r\n                            <div>\r\n                                <input type=\"file\" id=\"file\" multiple onChange={handleImageChange} />\r\n                                <h3 style={{fontFamily:\"MV Boli\", fontWeight:\"bold\", marginTop:\"20px\", color:'#BF9000'}}>Insert Images:</h3>\r\n                                <div className=\"label-holder\">\r\n                                \r\n                                    <label htmlFor=\"file\" className=\"label\">\r\n                                        \r\n                                        <i className=\"material-icons\">add_a_photo</i>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"result\">{renderPhotos(selectedFiles)}</div>\r\n                            </div>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", marginTop:'50px', borderBottom:'2px Solid', width:\"150px\"}}>Event Purpose</h1>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <h4 style={{color:'gray'}}>Strategic Objectves / Expected Outcomes:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Strategic Objectves / Expected Outcomes:\" \r\n                                    onChange={(event) => {\r\n                                        const objectives=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, objectives });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Details of the Event:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Details of the Event:\" \r\n                                    onChange={(event) => {\r\n                                        const details=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, details });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Categories of Expected Guests:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Categories of Expected Guests:\" \r\n                                    onChange={(event) => {\r\n                                        const guest_category=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, guest_category });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Name of Expected External VIPs, if any:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Name of Expected External VIPs, if any:\" \r\n                                    onChange={(event) => {\r\n                                        const vip_name=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, vip_name });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-20px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Master of Ceremony (Host)\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const host=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, host });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <div style={{marginTop:'-20px'}}>\r\n                                    <h4 style={{color:'gray'}}>Executives Required for this Event:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Executives Required for this Event:\" \r\n                                    onChange={(event) => {\r\n                                        const executives=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, executives });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <div style={{marginTop:'-20px'}}>\r\n                                    <h4 style={{color:'gray'}}>Proposed role of Executives:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Proposed role of Executives:\" \r\n                                    onChange={(event) => {\r\n                                        const executives_role=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, executives_role });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Date and Time Executive will be required:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Date and Time Executive will be required:\" \r\n                                    onChange={(event) => {\r\n                                        const executives_date_time=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, executives_date_time });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Proposed speech points will be provided for the Executives:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}}\r\n                                    rowsMin={3} \r\n                                    placeholder=\"Proposed speech points will be provided for the Executives:\" \r\n                                    onChange={(event) => {\r\n                                        const speech_points=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, speech_points });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Other speakers</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Other speakers\" \r\n                                    onChange={(event) => {\r\n                                        const other_speakers=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, other_speakers });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Are media invited / expected</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Are media invited / expected\" \r\n                                    onChange={(event) => {\r\n                                        const media=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, media });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Is any AV required (Please Specify)</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Is any AV required (Please Specify)\" \r\n                                    onChange={(event) => {\r\n                                        const av=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, av });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Will there be catering (Please Specify)</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    placeholder=\"Will there be catering (Please Specify)\" \r\n                                    onChange={(event) => {\r\n                                        const catering=event.target.value;\r\n                                        setEventPurpose({ ...eventPurpose, catering });\r\n                                    }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", marginTop:'60px', borderBottom:'2px Solid', width:\"200px\"}}>Event Coordination</h1>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={8}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Name of Event Manager\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const event_manager_name=event.target.value;\r\n                                        setEventCoordination({ ...eventCoordination, event_manager_name });\r\n                                    }}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Department\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const manager_department=event.target.value;\r\n                                        setEventCoordination({ ...eventCoordination, manager_department });\r\n                                    }}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    label=\"Telephone Number\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const manager_telephone_number=event.target.value;\r\n                                        setEventCoordination({ ...eventCoordination, manager_telephone_number });\r\n                                    }}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Mobile Number\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const manager_mobile_number=event.target.value;\r\n                                        setEventCoordination({ ...eventCoordination, manager_mobile_number });\r\n                                    }}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Email\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    onChange={(event) => {\r\n                                        const manager_email=event.target.value;\r\n                                        setEventCoordination({ ...eventCoordination, manager_email });\r\n                                    }}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{marginTop:'40px', width:'25%'}}> Submit </Button>  \r\n                    </form>\r\n                </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CreateEvent;","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\MyEvents.jsx",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken';\r\nimport { authenticate, isAuth, getCookie } from '../helpers/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport '../App.css';\r\nimport './registerStyle.css';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {TextField, Button, Grid, TextareaAutosize, Card, CardActionArea, CardContent} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Nav from './nav.js';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport item1 from '../img/item1.jpg'\r\nimport item2 from '../img/item2.jpg'\r\nimport item3 from '../img/item3.jpg'\r\nimport item4 from '../img/item4.jpg'\r\nimport item5 from '../img/item5.jpg'\r\nimport item6 from '../img/item6.jpg'\r\nimport item7 from '../img/item7.jpg'\r\nimport item8 from '../img/item8.jpg'\r\nimport item9 from '../img/item9.jpg'\r\nimport item10 from '../img/item10.jpg'\r\nimport item11 from '../img/item11.jpg'\r\nimport item12 from '../img/item12.jpg'\r\n// import AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\n// import LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\n// import TimePicker from '@material-ui/lab/TimePicker';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\nconst EventDetails = ({ match }) => {\r\n  \r\n\r\n  \r\n  const [myEventDetails, setMyEventDetails] = useState([]);\r\n  const [imageList, setImageList] = useState([[]]);\r\n  const [eventId, setEventId] = useState();\r\n  useEffect(() => {\r\n    let eventId = match.params.event_id;\r\n    setEventId(eventId);\r\n    console.log(imageList)\r\n    if(!imageList[1]){\r\n      setImageList([]);\r\n      const user_id = JSON.parse(localStorage.getItem('user'))['_id'];\r\n\r\n      if(user_id){\r\n        axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getMyEvents`, {user_id:user_id})\r\n        .then(res => {\r\n            if(res.data.length != 0){\r\n                const myEventDetails = res.data;\r\n                setMyEventDetails(myEventDetails);\r\n                setImageList([]);\r\n                console.log(imageList);\r\n                for (var i=0; i < res.data.length; i++) {\r\n                 axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getImageList`, {event_id:res.data[i].event_id})\r\n                 .then(res => {\r\n                   if(res.data.length != 0){\r\n                    var imageListTemp = imageList;\r\n                    var eachEventImage = res.data;\r\n                    imageListTemp.push(eachEventImage);\r\n                    setImageList(imageListTemp);\r\n                   }else{\r\n                    var imageListTemp = imageList;\r\n                    var eachEventImage = [];\r\n                    imageListTemp.push(eachEventImage);\r\n                    setImageList(imageListTemp);\r\n                   }\r\n                 }).catch(err => {\r\n                  console.log(\"jhadskjfhk\");\r\n                  });\r\n                }\r\n            }\r\n        })\r\n        .catch(err => {\r\n        console.log(err.response);\r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n  }, []);\r\n\r\n  const handleClick=()=>{\r\n    console.log(imageList);\r\n    console.log('haha');\r\n  }\r\n\r\n  const renderEvents = (myEventDetails) => {\r\n    return myEventDetails && myEventDetails.map((myEvent, i) => {\r\n      return (\r\n        <Grid item xs={12} key={i} md={4} style={{marginTop:'20px'}}>\r\n          <Link to={'/myEventDetails/'+myEvent.event_id} style={{textDecoration:'none'}}>\r\n            <Card className='items' style={{backgroundColor:'silver'}}>\r\n                <CardActionArea>\r\n                    <CardContent>\r\n                        <h3 className='item-name'>{myEvent.event_name}</h3>\r\n                        <div className='item-price'>{myEvent.from_date} </div>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      );\r\n    });\r\n  }\r\n  const renderPhotos = (index) => {\r\n    console.log(imageList.slice());\r\n    console.log(imageList[index+1]);\r\n    if(imageList[index+1]){\r\n      return imageList[index+1].map((photo) => {\r\n          return <img src={photo.path} alt=\"\" key={photo.path} style={{width:'334px',height:'190px',objectFit:'cover',padding:'0.75rem'}} />;\r\n      });\r\n    }else{\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <div className='min-h-screen bg-gray-100 text-gray-900 flex justify-center'>\r\n        \r\n        <Nav/>\r\n        <div className=\"container2\">\r\n        <button onClick={handleClick}>lol</button>\r\n          <h1 style={{color:'#003542', fontFamily:\"Comic Sans MS\", fontSize:\"30px\"}}>My Events </h1>\r\n          <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", borderBottom:'2px Solid', width:\"185px\"}}>Upcomming Events</h1>\r\n          <Grid container spacing={2}>\r\n            {renderEvents(myEventDetails)}\r\n            {/* {myEventDetails && myEventDetails.map((myEvent, i) => {\r\n              return(\r\n                  <Grid item xs={12} key={i} md={4} style={{marginTop:'20px'}}>\r\n                    <Link to={'/myEventDetails/'+myEvent.event_id} style={{textDecoration:'none'}}>\r\n                      <Card className='items' style={{backgroundColor:'silver'}}>\r\n                          <CardActionArea>\r\n                              <CardContent>\r\n                                  <h3 className='item-name'>{myEvent.event_name}</h3>\r\n                                  <div className='item-price'>{myEvent.from_date} </div>\r\n                              </CardContent>\r\n                          </CardActionArea>\r\n                      </Card>\r\n                    </Link>\r\n                    <div className=\"result\">{renderPhotos(i)}</div>\r\n                  </Grid>\r\n              )}\r\n             )}    */}\r\n            </Grid> \r\n            \r\n          <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", borderBottom:'2px Solid', width:\"120px\"}}>Past Events</h1>\r\n        </div>\r\n                \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EventDetails;","C:\\Users\\Admin\\Desktop\\Nepvent\\nepvent\\src\\Components\\EventDetails.jsx",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken';\r\nimport { authenticate, isAuth, getCookie } from '../helpers/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LogoBlack from '../img/logoBlack.jpg';\r\nimport '../App.css';\r\nimport './registerStyle.css';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {TextField, Button, Grid, TextareaAutosize, Card, CardActionArea, CardContent} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Nav from './nav.js';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport item1 from '../img/item1.jpg'\r\nimport item2 from '../img/item2.jpg'\r\nimport item3 from '../img/item3.jpg'\r\nimport item4 from '../img/item4.jpg'\r\nimport item5 from '../img/item5.jpg'\r\nimport item6 from '../img/item6.jpg'\r\nimport item7 from '../img/item7.jpg'\r\nimport item8 from '../img/item8.jpg'\r\nimport item9 from '../img/item9.jpg'\r\nimport item10 from '../img/item10.jpg'\r\nimport item11 from '../img/item11.jpg'\r\nimport item12 from '../img/item12.jpg'\r\n// import AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\n// import LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\n// import TimePicker from '@material-ui/lab/TimePicker';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\nconst MyEvents = ({ match }) => {\r\n  \r\n\r\n  // const [allEventData, setAllEventData]= useState({\r\n  //   eventDetails:'',\r\n  //   eventCoordiation:'',\r\n  //   eventPurpose:'',\r\n  //   eventImage:''\r\n  // });\r\n  const [eventDetails, setEventDetails] = useState();\r\n  const [eventPurpose, setEventPurpose] = useState();\r\n  const [eventCoordiation, setEventCoordiation] = useState();\r\n  const [eventImages, setEventImages] = useState();\r\n  const [eventId, setEventId] = useState();\r\n  useEffect(() => {\r\n    let eventId = match.params.event_id;\r\n    setEventId(eventId);\r\n    if(eventId){\r\n      axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getEventDteails`, {event_id:eventId})\r\n      .then(res => {\r\n        const eventDetails = res.data[0];\r\n        setEventDetails(eventDetails);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n      axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getEventPurpose`, {event_id:eventId})\r\n      .then(res => {\r\n        const eventPurpose = res.data[0];\r\n        setEventPurpose(eventPurpose);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n      axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getEventCoordination`, {event_id:eventId})\r\n      .then(res => {\r\n        const eventCoordiation = res.data[0];\r\n        setEventCoordiation(eventCoordiation);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n      axios.post(`${process.env.REACT_APP_EVENT_API_URL}/getEventImages`, {event_id:eventId})\r\n      .then(res => {\r\n        const eventImages = res.data;\r\n        setEventImages(eventImages);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleBtnClick =()=>{\r\n    console.log(eventDetails);\r\n    console.log(eventPurpose);\r\n    console.log(eventCoordiation);\r\n    console.log(eventImages);\r\n  }\r\n\r\n  const renderPhotos = (source) => {\r\n    return source.map((photo) => {\r\n        return <img src={photo.path} alt=\"\" key={photo.path} style={{width:'334px',height:'190px',objectFit:'cover',padding:'0.75rem'}} />;\r\n    });\r\n  };\r\n\r\n  if(eventId){\r\n    return(\r\n      <div>\r\n        {/* <Nav/>\r\n        <div className=\"container2\">\r\n          <h1>{eventId}</h1>\r\n         \r\n        </div> */}\r\n        <Nav/>\r\n                <div className=\"container2\">\r\n                  \r\n                <button type='button' onClick={handleBtnClick}>console all data</button>\r\n                    <h1 style={{color:'#003542', fontFamily:\"Comic Sans MS\", fontSize:\"30px\"}}>Event Details</h1>\r\n                    <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", borderBottom:'2px Solid', width:\"140px\"}}>Event Details</h1>\r\n                    <form style={{width:\"100%\"}} >     \r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                        required label=\"Event Name\"\r\n                                        readonly  \r\n                                        value={eventDetails?eventDetails.event_name:''} \r\n                                        style={{ width:\"100%\", color:'black'}}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                  <TextField \r\n                                      required label=\"From Date\"\r\n                                      readonly  \r\n                                      value={eventDetails?eventDetails.from_date.slice(0,10):''} \r\n                                      style={{ width:\"100%\"}}\r\n                                  />\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                <TextField \r\n                                      required label=\"From Time\"\r\n                                      readonly  \r\n                                      value={eventDetails?eventDetails.from_time:''} \r\n                                      style={{ width:\"100%\"}}\r\n                                  />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}> \r\n                            <div style={{marginTop:'30px'}}>\r\n                                  <TextField \r\n                                      required label=\"To Date\"\r\n                                      readonly  \r\n                                      value={eventDetails?eventDetails.to_date.slice(0,10):''} \r\n                                      style={{ width:\"100%\"}}\r\n                                  />\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                  <TextField \r\n                                      required label=\"To Time\"\r\n                                      readonly  \r\n                                      value={eventDetails?eventDetails.to_time:''} \r\n                                      style={{ width:\"100%\"}}\r\n                                  />\r\n                                </div>\r\n                             \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                              <div style={{marginTop:'30px'}}>\r\n                                <TextField \r\n                                    required label=\"Event Categories\"\r\n                                    readonly  \r\n                                    value={eventDetails?eventDetails.event_category_title:''} \r\n                                    style={{ width:\"100%\"}}\r\n                                />\r\n                              </div> \r\n                            </Grid>\r\n                            {eventDetails && eventDetails.other_category_description?<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    readonly\r\n                                    label=\"Other Category Description\"\r\n                                    value={eventDetails.other_category_description} \r\n                                    style={{ width:\"100%\"}}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>:null}\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                  <TextField \r\n                                    required label=\"Event Type\"\r\n                                    readonly  \r\n                                    value={eventDetails?eventDetails.event_type:''} \r\n                                    style={{ width:\"100%\"}}\r\n                                  />\r\n                                </div>\r\n                            </Grid>\r\n                            {eventDetails && eventDetails.proposed_venue?<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    readonly\r\n                                    value={eventDetails.proposed_venue}\r\n                                    label=\"Proposed Venue\" \r\n                                    style={{ width:\"100%\"}}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>:<Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    readonly\r\n                                    value={eventDetails?eventDetails.link:''}\r\n                                    label=\"Link\" \r\n                                    style={{ width:\"100%\"}}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>}\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"No. of Days\" \r\n                                    value={eventDetails?eventDetails.no_of_days:''} \r\n                                    readonly s\r\n                                    tyle={{ width:\"100%\"}}/>\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}> \r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    readonly\r\n                                    value={eventDetails?eventDetails.number_of_expected_guest:''}\r\n                                    label=\"Number of expected guests\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    />\r\n                                </div>                  \r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                            <div>\r\n                                <h3 style={{fontFamily:\"MV Boli\", fontWeight:\"bold\", marginTop:\"20px\", color:'#BF9000'}}>Images:</h3>\r\n                                <div className=\"result\">{eventImages?renderPhotos(eventImages):null}</div>\r\n                            </div>\r\n                            </Grid>\r\n                            {/* \r\n                            <Grid item xs={12} md={12}>\r\n                            <div>\r\n                                <input type=\"file\" id=\"file\" multiple onChange={handleImageChange} />\r\n                                <h3 style={{fontFamily:\"MV Boli\", fontWeight:\"bold\", marginTop:\"20px\", color:'#BF9000'}}>Insert Images:</h3>\r\n                                <div className=\"label-holder\">\r\n                                \r\n                                    <label htmlFor=\"file\" className=\"label\">\r\n                                        \r\n                                        <i className=\"material-icons\">add_a_photo</i>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"result\">{renderPhotos(selectedFiles)}</div>\r\n                            </div>\r\n                            </Grid> */}\r\n                            \r\n                        </Grid>\r\n                        \r\n                        <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", marginTop:'50px', borderBottom:'2px Solid', width:\"150px\"}}>Event Purpose</h1>\r\n                        <Grid container spacing={5}>\r\n                          <Grid item xs={12} md={12}>\r\n                              <div style={{marginTop:'30px'}}>\r\n                                  <h4 style={{color:'gray'}}>Strategic Objectves / Expected Outcomes:</h4>\r\n                                  <TextareaAutosize \r\n                                  style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                  rowsMin={3}\r\n                                  readonly\r\n                                  value={eventPurpose?eventPurpose.objectives:''}\r\n                                  placeholder=\"Strategic Objectves / Expected Outcomes:\" \r\n                                  />\r\n                              </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={12}>\r\n                            <div style={{marginTop:'-40px'}}>\r\n                                <h4 style={{color:'gray'}}>Details of the Event:</h4>\r\n                                <TextareaAutosize \r\n                                style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                rowsMin={3} \r\n                                readonly\r\n                                placeholder=\"Details of the Event:\" \r\n                                value={eventPurpose?eventPurpose.details:''}\r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={6}>\r\n                            <div style={{marginTop:'-40px'}}>\r\n                                <h4 style={{color:'gray'}}>Categories of Expected Guests:</h4>\r\n                                <TextareaAutosize \r\n                                style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                rowsMin={3} \r\n                                readonly\r\n                                placeholder=\"Categories of Expected Guests:\"\r\n                                value={eventPurpose?eventPurpose.guest_category:''}\r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={6}>\r\n                            <div style={{marginTop:'-40px'}}>\r\n                                <h4 style={{color:'gray'}}>Name of Expected External VIPs, if any:</h4>\r\n                                <TextareaAutosize \r\n                                style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                rowsMin={3} \r\n                                readonly\r\n                                placeholder=\"Name of Expected External VIPs, if any:\" \r\n                                value={eventPurpose?eventPurpose.vip_name:''}\r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={12}>\r\n                            <div style={{marginTop:'-20px'}}>\r\n                                <TextField \r\n                                required \r\n                                readonly\r\n                                label=\"Master of Ceremony (Host)\"  \r\n                                style={{ width:\"100%\"}}\r\n                                value={eventPurpose?eventPurpose.host:''}\r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={6}>\r\n                            <div style={{marginTop:'-20px'}}>\r\n                                <h4 style={{color:'gray'}}>Executives Required for this Event:</h4>\r\n                                <TextareaAutosize \r\n                                style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                rowsMin={3} \r\n                                readonly\r\n                                placeholder=\"Executives Required for this Event:\" \r\n                                value={eventPurpose?eventPurpose.executives:''}\r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={6}>\r\n                            <div style={{marginTop:'-20px'}}>\r\n                                <h4 style={{color:'gray'}}>Proposed role of Executives:</h4>\r\n                                <TextareaAutosize \r\n                                style={{ width:\"95%\", fontSize:'17px', padding:'10px'}} \r\n                                rowsMin={3} \r\n                                readonly\r\n                                placeholder=\"Proposed role of Executives:\" \r\n                                value={eventPurpose?eventPurpose.executives_role:''}\r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={12}>\r\n                            <div style={{marginTop:'-40px'}}>\r\n                                <h4 style={{color:'gray'}}>Date and Time Executive will be required:</h4>\r\n                                <TextareaAutosize \r\n                                style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                rowsMin={3} \r\n                                readonly\r\n                                placeholder=\"Date and Time Executive will be required:\"\r\n                                value={eventPurpose?eventPurpose.executives_date_time:''} \r\n                                />\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Proposed speech points will be provided for the Executives:</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}}\r\n                                    rowsMin={3} \r\n                                    readonly\r\n                                    placeholder=\"Proposed speech points will be provided for the Executives:\" \r\n                                    value={eventPurpose?eventPurpose.speech_points:''} \r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Other speakers</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    readonly\r\n                                    placeholder=\"Other speakers\" \r\n                                    value={eventPurpose?eventPurpose.other_speakers:''} \r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Are media invited / expected</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    readonly\r\n                                    placeholder=\"Are media invited / expected\" \r\n                                    value={eventPurpose?eventPurpose.media:''} \r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Is any AV required (Please Specify)</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    readonly\r\n                                    placeholder=\"Is any AV required (Please Specify)\" \r\n                                    value={eventPurpose?eventPurpose.av:''} \r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                                <div style={{marginTop:'-40px'}}>\r\n                                    <h4 style={{color:'gray'}}>Will there be catering (Please Specify)</h4>\r\n                                    <TextareaAutosize \r\n                                    style={{ width:\"98%\", fontSize:'17px', padding:'10px'}} \r\n                                    rowsMin={3} \r\n                                    readonly\r\n                                    placeholder=\"Will there be catering (Please Specify)\" \r\n                                    value={eventPurpose?eventPurpose.catering:''}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <h1 style={{color:'#BF9000', fontFamily:\"Comic Sans MS\", fontSize:\"20px\", marginTop:'60px', borderBottom:'2px Solid', width:\"200px\"}}>Event Coordination</h1>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={8}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Name of Event Manager\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    readonly\r\n                                    value={eventCoordiation?eventCoordiation.event_manager_name:''}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Department\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    readonly\r\n                                    value={eventCoordiation?eventCoordiation.manager_department:''}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    label=\"Telephone Number\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    readonly\r\n                                    value={eventCoordiation?eventCoordiation.manager_telephone_number:''}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Mobile Number\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    readonly\r\n                                    value={eventCoordiation?eventCoordiation.manager_mobile_number:''}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <div style={{marginTop:'30px'}}>\r\n                                    <TextField \r\n                                    required \r\n                                    label=\"Email\"  \r\n                                    style={{ width:\"100%\"}}\r\n                                    readonly\r\n                                    value={eventCoordiation?eventCoordiation.manager_email:''}\r\n                                    />\r\n                                </div> \r\n                            </Grid>\r\n                          </Grid>\r\n                        {/* \r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{marginTop:'40px', width:'25%'}}> Submit </Button>   */}\r\n                    </form>\r\n                </div>\r\n      </div>\r\n    );\r\n  }else{\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default MyEvents;",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":11},{"ruleId":"195","severity":1,"message":"199","line":14,"column":26,"nodeType":"197","messageId":"198","endLine":14,"endColumn":31},{"ruleId":"195","severity":1,"message":"200","line":9,"column":16,"nodeType":"197","messageId":"198","endLine":9,"endColumn":24},{"ruleId":"195","severity":1,"message":"201","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"202","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":16},{"ruleId":"195","severity":1,"message":"199","line":6,"column":26,"nodeType":"197","messageId":"198","endLine":6,"endColumn":31},{"ruleId":"195","severity":1,"message":"200","line":8,"column":16,"nodeType":"197","messageId":"198","endLine":8,"endColumn":24},{"ruleId":"195","severity":1,"message":"203","line":12,"column":12,"nodeType":"197","messageId":"198","endLine":12,"endColumn":18},{"ruleId":"195","severity":1,"message":"204","line":5,"column":9,"nodeType":"197","messageId":"198","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"205","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":56,"column":36,"nodeType":"208","messageId":"209","endLine":56,"endColumn":38},{"ruleId":"195","severity":1,"message":"210","line":79,"column":16,"nodeType":"197","messageId":"198","endLine":79,"endColumn":26},{"ruleId":"191","replacedBy":"211"},{"ruleId":"193","replacedBy":"212"},{"ruleId":"195","severity":1,"message":"213","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":22},{"ruleId":"195","severity":1,"message":"204","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":14},{"ruleId":"195","severity":1,"message":"214","line":10,"column":10,"nodeType":"197","messageId":"198","endLine":10,"endColumn":14},{"ruleId":"195","severity":1,"message":"215","line":11,"column":9,"nodeType":"197","messageId":"198","endLine":11,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":40,"column":6,"nodeType":"218","endLine":40,"endColumn":20,"suggestions":"219"},{"ruleId":"195","severity":1,"message":"220","line":41,"column":54,"nodeType":"197","messageId":"198","endLine":41,"endColumn":58},{"ruleId":"216","severity":1,"message":"221","line":22,"column":8,"nodeType":"218","endLine":22,"endColumn":10,"suggestions":"222"},{"ruleId":"195","severity":1,"message":"223","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":11},{"ruleId":"195","severity":1,"message":"213","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":22},{"ruleId":"195","severity":1,"message":"202","line":6,"column":24,"nodeType":"197","messageId":"198","endLine":6,"endColumn":30},{"ruleId":"195","severity":1,"message":"224","line":6,"column":32,"nodeType":"197","messageId":"198","endLine":6,"endColumn":41},{"ruleId":"195","severity":1,"message":"204","line":7,"column":10,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"200","line":7,"column":16,"nodeType":"197","messageId":"198","endLine":7,"endColumn":24},{"ruleId":"195","severity":1,"message":"205","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":17},{"ruleId":"195","severity":1,"message":"214","line":11,"column":10,"nodeType":"197","messageId":"198","endLine":11,"endColumn":14},{"ruleId":"195","severity":1,"message":"225","line":55,"column":10,"nodeType":"197","messageId":"198","endLine":55,"endColumn":22},{"ruleId":"195","severity":1,"message":"226","line":58,"column":10,"nodeType":"197","messageId":"198","endLine":58,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":166,"column":27,"nodeType":"208","messageId":"209","endLine":166,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":180,"column":21,"nodeType":"208","messageId":"209","endLine":180,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":194,"column":21,"nodeType":"208","messageId":"209","endLine":194,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":218,"column":42,"nodeType":"208","messageId":"209","endLine":218,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":221,"column":47,"nodeType":"208","messageId":"209","endLine":221,"endColumn":49},{"ruleId":"206","severity":1,"message":"207","line":241,"column":42,"nodeType":"208","messageId":"209","endLine":241,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":244,"column":47,"nodeType":"208","messageId":"209","endLine":244,"endColumn":49},{"ruleId":"206","severity":1,"message":"227","line":288,"column":32,"nodeType":"208","messageId":"209","endLine":288,"endColumn":34},{"ruleId":"216","severity":1,"message":"228","line":307,"column":6,"nodeType":"218","endLine":307,"endColumn":20,"suggestions":"229"},{"ruleId":"195","severity":1,"message":"230","line":308,"column":11,"nodeType":"197","messageId":"198","endLine":308,"endColumn":21},{"ruleId":"195","severity":1,"message":"231","line":308,"column":23,"nodeType":"197","messageId":"198","endLine":308,"endColumn":34},{"ruleId":"195","severity":1,"message":"232","line":308,"column":36,"nodeType":"197","messageId":"198","endLine":308,"endColumn":45},{"ruleId":"233","severity":1,"message":"234","line":504,"column":37,"nodeType":"235","endLine":504,"endColumn":62},{"ruleId":"195","severity":1,"message":"199","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":15},{"ruleId":"195","severity":1,"message":"223","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":11},{"ruleId":"195","severity":1,"message":"213","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":22},{"ruleId":"195","severity":1,"message":"202","line":5,"column":24,"nodeType":"197","messageId":"198","endLine":5,"endColumn":30},{"ruleId":"195","severity":1,"message":"224","line":5,"column":32,"nodeType":"197","messageId":"198","endLine":5,"endColumn":41},{"ruleId":"195","severity":1,"message":"200","line":6,"column":16,"nodeType":"197","messageId":"198","endLine":6,"endColumn":24},{"ruleId":"195","severity":1,"message":"205","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"195","severity":1,"message":"214","line":10,"column":10,"nodeType":"197","messageId":"198","endLine":10,"endColumn":14},{"ruleId":"195","severity":1,"message":"215","line":11,"column":9,"nodeType":"197","messageId":"198","endLine":11,"endColumn":18},{"ruleId":"195","severity":1,"message":"236","line":11,"column":20,"nodeType":"197","messageId":"198","endLine":11,"endColumn":26},{"ruleId":"195","severity":1,"message":"237","line":11,"column":34,"nodeType":"197","messageId":"198","endLine":11,"endColumn":50},{"ruleId":"195","severity":1,"message":"238","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":20},{"ruleId":"195","severity":1,"message":"239","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":20},{"ruleId":"195","severity":1,"message":"240","line":16,"column":8,"nodeType":"197","messageId":"198","endLine":16,"endColumn":13},{"ruleId":"195","severity":1,"message":"241","line":17,"column":8,"nodeType":"197","messageId":"198","endLine":17,"endColumn":13},{"ruleId":"195","severity":1,"message":"242","line":18,"column":8,"nodeType":"197","messageId":"198","endLine":18,"endColumn":13},{"ruleId":"195","severity":1,"message":"243","line":19,"column":8,"nodeType":"197","messageId":"198","endLine":19,"endColumn":13},{"ruleId":"195","severity":1,"message":"244","line":20,"column":8,"nodeType":"197","messageId":"198","endLine":20,"endColumn":13},{"ruleId":"195","severity":1,"message":"245","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":13},{"ruleId":"195","severity":1,"message":"246","line":22,"column":8,"nodeType":"197","messageId":"198","endLine":22,"endColumn":13},{"ruleId":"195","severity":1,"message":"247","line":23,"column":8,"nodeType":"197","messageId":"198","endLine":23,"endColumn":13},{"ruleId":"195","severity":1,"message":"248","line":24,"column":8,"nodeType":"197","messageId":"198","endLine":24,"endColumn":13},{"ruleId":"195","severity":1,"message":"249","line":25,"column":8,"nodeType":"197","messageId":"198","endLine":25,"endColumn":14},{"ruleId":"195","severity":1,"message":"250","line":26,"column":8,"nodeType":"197","messageId":"198","endLine":26,"endColumn":14},{"ruleId":"195","severity":1,"message":"251","line":27,"column":8,"nodeType":"197","messageId":"198","endLine":27,"endColumn":14},{"ruleId":"195","severity":1,"message":"252","line":32,"column":3,"nodeType":"197","messageId":"198","endLine":32,"endColumn":26},{"ruleId":"195","severity":1,"message":"253","line":33,"column":3,"nodeType":"197","messageId":"198","endLine":33,"endColumn":21},{"ruleId":"195","severity":1,"message":"254","line":45,"column":10,"nodeType":"197","messageId":"198","endLine":45,"endColumn":17},{"ruleId":"206","severity":1,"message":"227","line":57,"column":32,"nodeType":"208","messageId":"209","endLine":57,"endColumn":34},{"ruleId":"206","severity":1,"message":"227","line":65,"column":39,"nodeType":"208","messageId":"209","endLine":65,"endColumn":41},{"ruleId":"255","severity":1,"message":"256","line":71,"column":25,"nodeType":"197","messageId":"257","endLine":71,"endColumn":38},{"ruleId":"255","severity":1,"message":"258","line":72,"column":25,"nodeType":"197","messageId":"257","endLine":72,"endColumn":39},{"ruleId":"216","severity":1,"message":"259","line":89,"column":6,"nodeType":"218","endLine":89,"endColumn":8,"suggestions":"260"},{"ruleId":"195","severity":1,"message":"261","line":114,"column":9,"nodeType":"197","messageId":"198","endLine":114,"endColumn":21},{"ruleId":"195","severity":1,"message":"199","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":15},{"ruleId":"195","severity":1,"message":"223","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":11},{"ruleId":"195","severity":1,"message":"213","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":22},{"ruleId":"195","severity":1,"message":"202","line":5,"column":24,"nodeType":"197","messageId":"198","endLine":5,"endColumn":30},{"ruleId":"195","severity":1,"message":"224","line":5,"column":32,"nodeType":"197","messageId":"198","endLine":5,"endColumn":41},{"ruleId":"195","severity":1,"message":"204","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":14},{"ruleId":"195","severity":1,"message":"200","line":6,"column":16,"nodeType":"197","messageId":"198","endLine":6,"endColumn":24},{"ruleId":"195","severity":1,"message":"205","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"195","severity":1,"message":"214","line":10,"column":10,"nodeType":"197","messageId":"198","endLine":10,"endColumn":14},{"ruleId":"195","severity":1,"message":"236","line":11,"column":20,"nodeType":"197","messageId":"198","endLine":11,"endColumn":26},{"ruleId":"195","severity":1,"message":"262","line":11,"column":52,"nodeType":"197","messageId":"198","endLine":11,"endColumn":56},{"ruleId":"195","severity":1,"message":"263","line":11,"column":58,"nodeType":"197","messageId":"198","endLine":11,"endColumn":72},{"ruleId":"195","severity":1,"message":"264","line":11,"column":74,"nodeType":"197","messageId":"198","endLine":11,"endColumn":85},{"ruleId":"195","severity":1,"message":"238","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":20},{"ruleId":"195","severity":1,"message":"239","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":20},{"ruleId":"195","severity":1,"message":"240","line":16,"column":8,"nodeType":"197","messageId":"198","endLine":16,"endColumn":13},{"ruleId":"195","severity":1,"message":"241","line":17,"column":8,"nodeType":"197","messageId":"198","endLine":17,"endColumn":13},{"ruleId":"195","severity":1,"message":"242","line":18,"column":8,"nodeType":"197","messageId":"198","endLine":18,"endColumn":13},{"ruleId":"195","severity":1,"message":"243","line":19,"column":8,"nodeType":"197","messageId":"198","endLine":19,"endColumn":13},{"ruleId":"195","severity":1,"message":"244","line":20,"column":8,"nodeType":"197","messageId":"198","endLine":20,"endColumn":13},{"ruleId":"195","severity":1,"message":"245","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":13},{"ruleId":"195","severity":1,"message":"246","line":22,"column":8,"nodeType":"197","messageId":"198","endLine":22,"endColumn":13},{"ruleId":"195","severity":1,"message":"247","line":23,"column":8,"nodeType":"197","messageId":"198","endLine":23,"endColumn":13},{"ruleId":"195","severity":1,"message":"248","line":24,"column":8,"nodeType":"197","messageId":"198","endLine":24,"endColumn":13},{"ruleId":"195","severity":1,"message":"249","line":25,"column":8,"nodeType":"197","messageId":"198","endLine":25,"endColumn":14},{"ruleId":"195","severity":1,"message":"250","line":26,"column":8,"nodeType":"197","messageId":"198","endLine":26,"endColumn":14},{"ruleId":"195","severity":1,"message":"251","line":27,"column":8,"nodeType":"197","messageId":"198","endLine":27,"endColumn":14},{"ruleId":"195","severity":1,"message":"252","line":32,"column":3,"nodeType":"197","messageId":"198","endLine":32,"endColumn":26},{"ruleId":"195","severity":1,"message":"253","line":33,"column":3,"nodeType":"197","messageId":"198","endLine":33,"endColumn":21},{"ruleId":"216","severity":1,"message":"265","line":93,"column":6,"nodeType":"218","endLine":93,"endColumn":8,"suggestions":"266"},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'Redirect' is defined but never used.","'Component' is defined but never used.","'isAuth' is defined but never used.","'userId' is assigned a value but never used.","'Link' is defined but never used.","'LogoBlack' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'profileImg' is assigned a value but never used.",["267"],["268"],"'authenticate' is defined but never used.","'blue' is defined but never used.","'TextField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["269"],"'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formData' and 'match.params.token'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["270"],"'jwt' is defined but never used.","'getCookie' is defined but never used.","'handleCancle' is defined but never used.","'handleRegister' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'eventCoordination', 'eventDetailsData', 'eventPurpose', and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["271"],"'first_name' is assigned a value but never used.","'middle_name' is assigned a value but never used.","'last_name' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'TextareaAutosize' is defined but never used.","'Autocomplete' is defined but never used.","'DateFnsUtils' is defined but never used.","'item1' is defined but never used.","'item2' is defined but never used.","'item3' is defined but never used.","'item4' is defined but never used.","'item5' is defined but never used.","'item6' is defined but never used.","'item7' is defined but never used.","'item8' is defined but never used.","'item9' is defined but never used.","'item10' is defined but never used.","'item11' is defined but never used.","'item12' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'eventId' is assigned a value but never used.","no-redeclare","'imageListTemp' is already defined.","redeclared","'eachEventImage' is already defined.","React Hook useEffect has missing dependencies: 'imageList' and 'match.params.event_id'. Either include them or remove the dependency array.",["272"],"'renderPhotos' is assigned a value but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.event_id'. Either include it or remove the dependency array.",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [formData, match.params]",{"range":"284","text":"285"},"Update the dependencies array to be: [formData, match.params.token]",{"range":"286","text":"287"},"Update the dependencies array to be: [eventCoordination, eventDetailsData, eventPurpose, formData, match.params]",{"range":"288","text":"289"},"Update the dependencies array to be: [imageList, match.params.event_id]",{"range":"290","text":"291"},"Update the dependencies array to be: [match.params.event_id]",{"range":"292","text":"293"},[1177,1191],"[formData, match.params]",[650,652],"[formData, match.params.token]",[12507,12521],"[eventCoordination, eventDetailsData, eventPurpose, formData, match.params]",[3220,3222],"[imageList, match.params.event_id]",[3142,3144],"[match.params.event_id]"]